import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.TreeMap;

import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class Reducer2B extends Reducer<Text,Text,Text,Text>{
	public void reduce(Text key, Iterable<Text> values, Context context) throws
	IOException, InterruptedException {

		Map<String,Integer> authors = new TreeMap<String,Integer>();
		
		for(Text author: values){
			String authorString = author.toString();
			if(authors.containsKey(authorString)){
				authors.put(authorString, authors.get(authorString) + 1);
			}
			else{
				authors.put(authorString, 1);
			}
		}
		
		for(String authorMapped: authors.keySet()){
			context.write(key, new Text("\t" + authorMapped + "\t" + authors.get(authorMapped)));
		}
	}
}